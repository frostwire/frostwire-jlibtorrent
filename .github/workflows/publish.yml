name: Publish Java Package

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to use testing'
        required: true
        default: 'release/2.0.13.6'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write        # GITHUB_TOKEN perms (still needed for publish)
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Compute TAG and VERSION once, expose them as outputs
      - name: Compute tag/version
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG="${{ inputs.release_tag }}"
          else
            TAG="${{ github.ref_name }}"
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "version=${TAG#release/}" >> "$GITHUB_OUTPUT"
          echo "RELEASE_VERSION=${TAG#release/}" >> $GITHUB_ENV

      - name: Delete package version if it already exists
        if: always()
        env:
          GH_TOKEN: ${{ secrets.PACKAGES_PAT }}   # classic PAT with delete:packages
          VERSION: ${{ steps.vars.outputs.version }}
        run: |
          set +e  # Don't exit on error, we handle it manually
          ORG="frostwire"
          PKG_TYPE="maven"
          PKGS=(
            com.frostwire.jlibtorrent
            com.frostwire.jlibtorrent-macosx-arm64
            com.frostwire.jlibtorrent-macosx-x86_64
            com.frostwire.jlibtorrent-windows
            com.frostwire.jlibtorrent-linux-x86_64
            com.frostwire.jlibtorrent-linux-arm64
            com.frostwire.jlibtorrent-android-arm
            com.frostwire.jlibtorrent-android-x86
            com.frostwire.jlibtorrent-android-arm64
            com.frostwire.jlibtorrent-android-x86_64
          )
          for P in "${PKGS[@]}"; do
            # Query the package versions, capturing both output and exit code
            versions_response=$(gh api -H "Accept: application/vnd.github+json" \
                 "/orgs/$ORG/packages/$PKG_TYPE/$P/versions" 2>&1)
            api_exit_code=$?

            # If the API call failed (404, etc.), skip to next package
            if [ $api_exit_code -ne 0 ]; then
              echo "Package $P not found or inaccessible, skipping..."
              continue
            fi

            # Extract the ID for the matching version
            id=$(echo "$versions_response" | jq -r ".[] | select(.name==\"$VERSION\") | .id" 2>/dev/null | head -n1)

            # Only delete if we found a valid ID
            if [[ -n "$id" && "$id" != "null" ]]; then
              echo "Deleting $P:$VERSION (ID: $id)"
              delete_response=$(gh api -X DELETE -H "Accept: application/vnd.github+json" \
                "/orgs/$ORG/packages/$PKG_TYPE/$P/versions/$id" 2>&1)
              delete_exit_code=$?
              if [ $delete_exit_code -eq 0 ]; then
                echo "Successfully deleted $P:$VERSION"
              else
                echo "Warning: Failed to delete $P:$VERSION - $delete_response"
              fi
            else
              echo "Version $VERSION not found in package $P"
            fi
          done
          exit 0  # Always succeed - deletion is optional

      - name: Download Release Assets from URLs
        run: |
          mkdir -p build/libs
          TAG="${{ steps.vars.outputs.tag }}"
          ENCODED_TAG=$(echo "$TAG" | sed 's|/|%2F|g')
          VERSION="${{ steps.vars.outputs.version }}"

          curl -L --fail -o build/libs/jlibtorrent-${VERSION}.jar https://github.com/frostwire/frostwire-jlibtorrent/releases/download/${ENCODED_TAG}/jlibtorrent-${VERSION}.jar
          curl -L --fail -o build/libs/jlibtorrent-${VERSION}-sources.jar https://github.com/frostwire/frostwire-jlibtorrent/releases/download/${ENCODED_TAG}/jlibtorrent-${VERSION}-sources.jar
          curl -L --fail -o build/libs/jlibtorrent-${VERSION}-javadoc.jar https://github.com/frostwire/frostwire-jlibtorrent/releases/download/${ENCODED_TAG}/jlibtorrent-${VERSION}-javadoc.jar
          curl -L --fail -o build/libs/jlibtorrent-macosx-arm64-${VERSION}.jar https://github.com/frostwire/frostwire-jlibtorrent/releases/download/${ENCODED_TAG}/jlibtorrent-macosx-arm64-${VERSION}.jar
          curl -L --fail -o build/libs/jlibtorrent-macosx-x86_64-${VERSION}.jar https://github.com/frostwire/frostwire-jlibtorrent/releases/download/${ENCODED_TAG}/jlibtorrent-macosx-x86_64-${VERSION}.jar
          curl -L --fail -o build/libs/jlibtorrent-windows-${VERSION}.jar https://github.com/frostwire/frostwire-jlibtorrent/releases/download/${ENCODED_TAG}/jlibtorrent-windows-${VERSION}.jar
          curl -L --fail -o build/libs/jlibtorrent-linux-x86_64-${VERSION}.jar https://github.com/frostwire/frostwire-jlibtorrent/releases/download/${ENCODED_TAG}/jlibtorrent-linux-x86_64-${VERSION}.jar
          curl -L --fail -o build/libs/jlibtorrent-linux-arm64-${VERSION}.jar https://github.com/frostwire/frostwire-jlibtorrent/releases/download/${ENCODED_TAG}/jlibtorrent-linux-arm64-${VERSION}.jar
          curl -L --fail -o build/libs/jlibtorrent-android-arm-${VERSION}.jar https://github.com/frostwire/frostwire-jlibtorrent/releases/download/${ENCODED_TAG}/jlibtorrent-android-arm-${VERSION}.jar
          curl -L --fail -o build/libs/jlibtorrent-android-x86-${VERSION}.jar https://github.com/frostwire/frostwire-jlibtorrent/releases/download/${ENCODED_TAG}/jlibtorrent-android-x86-${VERSION}.jar
          curl -L --fail -o build/libs/jlibtorrent-android-arm64-${VERSION}.jar https://github.com/frostwire/frostwire-jlibtorrent/releases/download/${ENCODED_TAG}/jlibtorrent-android-arm64-${VERSION}.jar
          curl -L --fail -o build/libs/jlibtorrent-android-x86_64-${VERSION}.jar https://github.com/frostwire/frostwire-jlibtorrent/releases/download/${ENCODED_TAG}/jlibtorrent-android-x86_64-${VERSION}.jar

      - name: Publish to GitHub Packages
        run: gradle publish
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
