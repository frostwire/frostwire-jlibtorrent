apply plugin: 'java'

group 'com.frostwire'
archivesBaseName = 'jlibtorrent'
// Just changing version here should be all that's necessary to bump the version on the library
version '1.2.14.2'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

if (!hasProperty('ossrhUsername')) {
    ext.ossrhUsername = ''
}

if (!hasProperty('ossrhPassword')) {
    ext.ossrhPassword = ''
}

repositories {
    mavenCentral()
}

dependencies {
		implementation 'junit:junit:4.12'
}

tasks.withType(Test) {
    systemProperty "java.library.path", "."
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standard_out"
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadoc2(type: Javadoc) {
    source = sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc2) {
    classifier = 'javadoc'
    from javadoc2.destinationDir
}

task nativeMacOSXJar(type: Zip) {
    destinationDirectory = file("$buildDir/libs")
    archiveBaseName = 'jlibtorrent-macosx'
    archiveExtension = 'jar'
    from fileTree(dir: 'swig/bin/release/macosx', excludes: ['**/ed25519', '**/src'], include: '**/*libjlibtorrent.dylib')
    into 'lib/'
    rename(".dylib", "-${version}.dylib")
}

task nativeWindowsJar(type: Zip) {
    destinationDirectory = file("$buildDir/libs")
    archiveBaseName ='jlibtorrent-windows'
    archiveExtension = 'jar'
    from fileTree(dir: 'swig/bin/release/windows', excludes: ['**/ed25519', '**/src'], include: '**/*jlibtorrent.dll')
    into 'lib/'
    rename(".dll", "-${version}.dll")
}

task nativeLinuxJar(type: Zip) {
    destinationDirectory = file("$buildDir/libs")
    archiveBaseName ='jlibtorrent-linux'
    archiveExtension = 'jar'
    from fileTree(dir: 'swig/bin/release/linux', excludes: ['**/ed25519', '**/src'], include: '**/*libjlibtorrent.so')
    into 'lib/'
    rename(".so", "-${version}.so")
}

task nativeAndroidArmJar(type: Zip) {
    destinationDirectory = file("$buildDir/libs")
    archiveBaseName ='jlibtorrent-android-arm'
    archiveExtension = 'jar'
	  from fileTree(dir: 'swig/bin/release/android', include: 'armeabi-v7a/libjlibtorrent.so')
    into 'lib/'
	  rename(".so", "-${version}.so")
}

task nativeAndroidX86Jar(type: Zip) {
    destinationDirectory = file("$buildDir/libs")
    archiveBaseName ='jlibtorrent-android-x86'
    archiveExtension = 'jar'
	  from fileTree(dir: 'swig/bin/release/android', include: 'x86/libjlibtorrent.so')
    into 'lib/'
	  rename(".so", "-${version}.so")
}

task nativeAndroidArm64Jar(type: Zip) {
    destinationDirectory = file("$buildDir/libs")
    archiveBaseName ='jlibtorrent-android-arm64'
    archiveExtension = 'jar'
	  from fileTree(dir: 'swig/bin/release/android', include: 'arm64-v8a/libjlibtorrent.so')
    into 'lib/'
	  rename(".so", "-${version}.so")
}

task nativeAndroidX64Jar(type: Zip) {
    destinationDirectory = file("$buildDir/libs")
    archiveBaseName ='jlibtorrent-android-x86_64'
    archiveExtension = 'jar'
    from fileTree(dir: 'swig/bin/release/android', include: 'x86_64/libjlibtorrent.so')
    into 'lib/'
    rename(".so", "-${version}.so")
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives nativeMacOSXJar
    archives nativeWindowsJar
    archives nativeLinuxJar
    archives nativeAndroidArmJar
    archives nativeAndroidX86Jar
    archives nativeAndroidArm64Jar
    archives nativeAndroidX64Jar
}

def pomData() {
    return {
        resolveStrategy = Closure.DELEGATE_FIRST
        name 'frostwire-jlibtorrent'
        description 'A swig Java interface for libtorrent by the makers of FrostWire.'
        url 'https://github.com/frostwire/frostwire-jlibtorrent'
        scm {
            connection 'scm:git:git://github.com/frostwire/frostwire-jlibtorrent.git'
            developerConnection 'scm:git:ssh:git@github.com/frostwire/frostwire-jlibtorrent.git'
            url 'https://github.com/frostwire/frostwire-jlibtorrent'
        }
        licenses {
            license {
                name 'The MIT License'
                url 'https://github.com/frostwire/frostwire-jlibtorrent/blob/master/LICENSE.md'
            }
        }
        developers {
            developer {
                id 'gubatron'
                name 'Angel Leon'
                email 'gubatron@gmail.com'
            }
            developer {
                id 'aldenml'
                name 'Alden Torres'
                email 'aldenml@gmail.com'
            }
        }
    }
}

def addDependency(root) {
    def dependenciesNode = root.dependencies[0]
    if (!dependenciesNode) {
        dependenciesNode = root.appendNode('dependencies')
    }
    def depNode = dependenciesNode.appendNode('dependency')
    depNode.appendNode('groupId', group)
    depNode.appendNode('artifactId', archivesBaseName)
    depNode.appendNode('version', version)
}
