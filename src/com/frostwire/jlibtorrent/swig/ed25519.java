/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class ed25519 {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected ed25519(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ed25519 obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_ed25519(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static int create_seed(char_vector seed) {
    return libtorrent_jni.ed25519_create_seed(char_vector.getCPtr(seed), seed);
  }

  public static void create_keypair(char_vector public_key, char_vector private_key, char_vector seed) {
    libtorrent_jni.ed25519_create_keypair(char_vector.getCPtr(public_key), public_key, char_vector.getCPtr(private_key), private_key, char_vector.getCPtr(seed), seed);
  }

  public static void sign(char_vector signature, char_vector message, char_vector public_key, char_vector private_key) {
    libtorrent_jni.ed25519_sign(char_vector.getCPtr(signature), signature, char_vector.getCPtr(message), message, char_vector.getCPtr(public_key), public_key, char_vector.getCPtr(private_key), private_key);
  }

  public static int verify(char_vector signature, char_vector message, char_vector private_key) {
    return libtorrent_jni.ed25519_verify(char_vector.getCPtr(signature), signature, char_vector.getCPtr(message), message, char_vector.getCPtr(private_key), private_key);
  }

  public static void add_scalar(char_vector public_key, char_vector private_key, char_vector scalar) {
    libtorrent_jni.ed25519_add_scalar(char_vector.getCPtr(public_key), public_key, char_vector.getCPtr(private_key), private_key, char_vector.getCPtr(scalar), scalar);
  }

  public static void key_exchange(char_vector shared_secret, char_vector public_key, char_vector private_key) {
    libtorrent_jni.ed25519_key_exchange(char_vector.getCPtr(shared_secret), shared_secret, char_vector.getCPtr(public_key), public_key, char_vector.getCPtr(private_key), private_key);
  }

  public ed25519() {
    this(libtorrent_jni.new_ed25519(), true);
  }

  public final static int seed_size = libtorrent_jni.ed25519_seed_size_get();
  public final static int private_key_size = libtorrent_jni.ed25519_private_key_size_get();
  public final static int public_key_size = libtorrent_jni.ed25519_public_key_size_get();
  public final static int signature_size = libtorrent_jni.ed25519_signature_size_get();
  public final static int scalar_size = libtorrent_jni.ed25519_scalar_size_get();
  public final static int shared_secret_size = libtorrent_jni.ed25519_shared_secret_size_get();
}
