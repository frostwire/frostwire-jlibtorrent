/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class alert_ptr_deque {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected alert_ptr_deque(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(alert_ptr_deque obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_alert_ptr_deque(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean empty() {
    return libtorrent_jni.alert_ptr_deque_empty(swigCPtr, this);
  }

  public alert_ptr_deque() {
    this(libtorrent_jni.new_alert_ptr_deque__SWIG_0(), true);
  }

  public alert_ptr_deque(long size, alert value) {
    this(libtorrent_jni.new_alert_ptr_deque__SWIG_1(size, alert.getCPtr(value), value), true);
  }

  public alert_ptr_deque(long size) {
    this(libtorrent_jni.new_alert_ptr_deque__SWIG_2(size), true);
  }

  public alert_ptr_deque(alert_ptr_deque arg0) {
    this(libtorrent_jni.new_alert_ptr_deque__SWIG_3(alert_ptr_deque.getCPtr(arg0), arg0), true);
  }

  public void assign(long n, alert value) {
    libtorrent_jni.alert_ptr_deque_assign(swigCPtr, this, n, alert.getCPtr(value), value);
  }

  public void swap(alert_ptr_deque x) {
    libtorrent_jni.alert_ptr_deque_swap(swigCPtr, this, alert_ptr_deque.getCPtr(x), x);
  }

  public long size() {
    return libtorrent_jni.alert_ptr_deque_size(swigCPtr, this);
  }

  public long max_size() {
    return libtorrent_jni.alert_ptr_deque_max_size(swigCPtr, this);
  }

  public void resize(long n, alert c) {
    libtorrent_jni.alert_ptr_deque_resize__SWIG_0(swigCPtr, this, n, alert.getCPtr(c), c);
  }

  public void resize(long n) {
    libtorrent_jni.alert_ptr_deque_resize__SWIG_1(swigCPtr, this, n);
  }

  public alert front() {
    long cPtr = libtorrent_jni.alert_ptr_deque_front(swigCPtr, this);
    return (cPtr == 0) ? null : new alert(cPtr, false);
  }

  public alert back() {
    long cPtr = libtorrent_jni.alert_ptr_deque_back(swigCPtr, this);
    return (cPtr == 0) ? null : new alert(cPtr, false);
  }

  public void push_front(alert x) {
    libtorrent_jni.alert_ptr_deque_push_front(swigCPtr, this, alert.getCPtr(x), x);
  }

  public void push_back(alert x) {
    libtorrent_jni.alert_ptr_deque_push_back(swigCPtr, this, alert.getCPtr(x), x);
  }

  public void pop_front() {
    libtorrent_jni.alert_ptr_deque_pop_front(swigCPtr, this);
  }

  public void pop_back() {
    libtorrent_jni.alert_ptr_deque_pop_back(swigCPtr, this);
  }

  public void clear() {
    libtorrent_jni.alert_ptr_deque_clear(swigCPtr, this);
  }

  public alert getitem(int i) {
    long cPtr = libtorrent_jni.alert_ptr_deque_getitem(swigCPtr, this, i);
    return (cPtr == 0) ? null : new alert(cPtr, false);
  }

  public void setitem(int i, alert x) {
    libtorrent_jni.alert_ptr_deque_setitem(swigCPtr, this, i, alert.getCPtr(x), x);
  }

  public void delitem(int i) {
    libtorrent_jni.alert_ptr_deque_delitem(swigCPtr, this, i);
  }

  public alert_ptr_deque getslice(int i, int j) {
    return new alert_ptr_deque(libtorrent_jni.alert_ptr_deque_getslice(swigCPtr, this, i, j), true);
  }

  public void setslice(int i, int j, alert_ptr_deque v) {
    libtorrent_jni.alert_ptr_deque_setslice(swigCPtr, this, i, j, alert_ptr_deque.getCPtr(v), v);
  }

  public void delslice(int i, int j) {
    libtorrent_jni.alert_ptr_deque_delslice(swigCPtr, this, i, j);
  }

}
