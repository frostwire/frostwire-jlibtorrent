/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public enum operation_t {
  op_bittorrent(libtorrent_jni.op_bittorrent_get()),
  op_iocontrol,
  op_getpeername,
  op_getname,
  op_alloc_recvbuf,
  op_alloc_sndbuf,
  op_file_write,
  op_file_read,
  op_file,
  op_sock_write,
  op_sock_read,
  op_sock_open,
  op_sock_bind,
  op_available,
  op_encryption,
  op_connect,
  op_ssl_handshake,
  op_get_interface;

  public final int swigValue() {
    return swigValue;
  }

  public static operation_t swigToEnum(int swigValue) {
    operation_t[] swigValues = operation_t.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (operation_t swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + operation_t.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private operation_t() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private operation_t(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private operation_t(operation_t swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

