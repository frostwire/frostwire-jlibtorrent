/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class feed_item_vector {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected feed_item_vector(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(feed_item_vector obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_feed_item_vector(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public feed_item_vector() {
    this(libtorrent_jni.new_feed_item_vector(), true);
  }

  public long size() {
    return libtorrent_jni.feed_item_vector_size(swigCPtr, this);
  }

  public long capacity() {
    return libtorrent_jni.feed_item_vector_capacity(swigCPtr, this);
  }

  public void reserve(long n) {
    libtorrent_jni.feed_item_vector_reserve(swigCPtr, this, n);
  }

  public boolean isEmpty() {
    return libtorrent_jni.feed_item_vector_isEmpty(swigCPtr, this);
  }

  public void clear() {
    libtorrent_jni.feed_item_vector_clear(swigCPtr, this);
  }

  public void add(feed_item x) {
    libtorrent_jni.feed_item_vector_add(swigCPtr, this, feed_item.getCPtr(x), x);
  }

  public feed_item get(int i) {
    return new feed_item(libtorrent_jni.feed_item_vector_get(swigCPtr, this, i), false);
  }

  public void set(int i, feed_item val) {
    libtorrent_jni.feed_item_vector_set(swigCPtr, this, i, feed_item.getCPtr(val), val);
  }

}
