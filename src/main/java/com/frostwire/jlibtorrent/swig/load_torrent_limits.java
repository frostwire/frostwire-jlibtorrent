/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class load_torrent_limits {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected load_torrent_limits(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(load_torrent_limits obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_load_torrent_limits(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setMax_buffer_size(int value) {
    libtorrent_jni.load_torrent_limits_max_buffer_size_set(swigCPtr, this, value);
  }

  public int getMax_buffer_size() {
    return libtorrent_jni.load_torrent_limits_max_buffer_size_get(swigCPtr, this);
  }

  public void setMax_pieces(int value) {
    libtorrent_jni.load_torrent_limits_max_pieces_set(swigCPtr, this, value);
  }

  public int getMax_pieces() {
    return libtorrent_jni.load_torrent_limits_max_pieces_get(swigCPtr, this);
  }

  public void setMax_decode_depth(int value) {
    libtorrent_jni.load_torrent_limits_max_decode_depth_set(swigCPtr, this, value);
  }

  public int getMax_decode_depth() {
    return libtorrent_jni.load_torrent_limits_max_decode_depth_get(swigCPtr, this);
  }

  public void setMax_decode_tokens(int value) {
    libtorrent_jni.load_torrent_limits_max_decode_tokens_set(swigCPtr, this, value);
  }

  public int getMax_decode_tokens() {
    return libtorrent_jni.load_torrent_limits_max_decode_tokens_get(swigCPtr, this);
  }

  public load_torrent_limits() {
    this(libtorrent_jni.new_load_torrent_limits(), true);
  }

}
