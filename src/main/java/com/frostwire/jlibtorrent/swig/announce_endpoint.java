/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class announce_endpoint {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected announce_endpoint(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(announce_endpoint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_announce_endpoint(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setLast_error(error_code value) {
    libtorrent_jni.announce_endpoint_last_error_set(swigCPtr, this, error_code.getCPtr(value), value);
  }

  public error_code getLast_error() {
    long cPtr = libtorrent_jni.announce_endpoint_last_error_get(swigCPtr, this);
    return (cPtr == 0) ? null : new error_code(cPtr, false);
  }

  public void setLocal_endpoint(tcp_endpoint value) {
    libtorrent_jni.announce_endpoint_local_endpoint_set(swigCPtr, this, tcp_endpoint.getCPtr(value), value);
  }

  public tcp_endpoint getLocal_endpoint() {
    long cPtr = libtorrent_jni.announce_endpoint_local_endpoint_get(swigCPtr, this);
    return (cPtr == 0) ? null : new tcp_endpoint(cPtr, false);
  }

  public void setScrape_incomplete(int value) {
    libtorrent_jni.announce_endpoint_scrape_incomplete_set(swigCPtr, this, value);
  }

  public int getScrape_incomplete() {
    return libtorrent_jni.announce_endpoint_scrape_incomplete_get(swigCPtr, this);
  }

  public void setScrape_complete(int value) {
    libtorrent_jni.announce_endpoint_scrape_complete_set(swigCPtr, this, value);
  }

  public int getScrape_complete() {
    return libtorrent_jni.announce_endpoint_scrape_complete_get(swigCPtr, this);
  }

  public void setScrape_downloaded(int value) {
    libtorrent_jni.announce_endpoint_scrape_downloaded_set(swigCPtr, this, value);
  }

  public int getScrape_downloaded() {
    return libtorrent_jni.announce_endpoint_scrape_downloaded_get(swigCPtr, this);
  }

  public void setFails(short value) {
    libtorrent_jni.announce_endpoint_fails_set(swigCPtr, this, value);
  }

  public short getFails() {
    return libtorrent_jni.announce_endpoint_fails_get(swigCPtr, this);
  }

  public void setUpdating(boolean value) {
    libtorrent_jni.announce_endpoint_updating_set(swigCPtr, this, value);
  }

  public boolean getUpdating() {
    return libtorrent_jni.announce_endpoint_updating_get(swigCPtr, this);
  }

  public boolean is_working() {
    return libtorrent_jni.announce_endpoint_is_working(swigCPtr, this);
  }

  public byte_vector get_message() {
    return new byte_vector(libtorrent_jni.announce_endpoint_get_message(swigCPtr, this), true);
  }

  public long get_next_announce() {
    return libtorrent_jni.announce_endpoint_get_next_announce(swigCPtr, this);
  }

  public long get_min_announce() {
    return libtorrent_jni.announce_endpoint_get_min_announce(swigCPtr, this);
  }

}
