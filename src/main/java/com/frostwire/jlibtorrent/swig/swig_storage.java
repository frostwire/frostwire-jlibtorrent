/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class swig_storage {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected swig_storage(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(swig_storage obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_swig_storage(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    libtorrent_jni.swig_storage_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    libtorrent_jni.swig_storage_change_ownership(this, swigCPtr, true);
  }

  public void set_params(storage_params params) {
    if (getClass() == swig_storage.class) libtorrent_jni.swig_storage_set_params(swigCPtr, this, storage_params.getCPtr(params), params); else libtorrent_jni.swig_storage_set_paramsSwigExplicitswig_storage(swigCPtr, this, storage_params.getCPtr(params), params);
  }

  public void initialize(storage_error ec) {
    if (getClass() == swig_storage.class) libtorrent_jni.swig_storage_initialize(swigCPtr, this, storage_error.getCPtr(ec), ec); else libtorrent_jni.swig_storage_initializeSwigExplicitswig_storage(swigCPtr, this, storage_error.getCPtr(ec), ec);
  }

  public int read(long iov_base, long iov_len, int piece, int offset, int flags, storage_error ec) {
    return (getClass() == swig_storage.class) ? libtorrent_jni.swig_storage_read(swigCPtr, this, iov_base, iov_len, piece, offset, flags, storage_error.getCPtr(ec), ec) : libtorrent_jni.swig_storage_readSwigExplicitswig_storage(swigCPtr, this, iov_base, iov_len, piece, offset, flags, storage_error.getCPtr(ec), ec);
  }

  public int write(long iov_base, long iov_len, int piece, int offset, int flags, storage_error ec) {
    return (getClass() == swig_storage.class) ? libtorrent_jni.swig_storage_write(swigCPtr, this, iov_base, iov_len, piece, offset, flags, storage_error.getCPtr(ec), ec) : libtorrent_jni.swig_storage_writeSwigExplicitswig_storage(swigCPtr, this, iov_base, iov_len, piece, offset, flags, storage_error.getCPtr(ec), ec);
  }

  public boolean has_any_file(storage_error ec) {
    return (getClass() == swig_storage.class) ? libtorrent_jni.swig_storage_has_any_file(swigCPtr, this, storage_error.getCPtr(ec), ec) : libtorrent_jni.swig_storage_has_any_fileSwigExplicitswig_storage(swigCPtr, this, storage_error.getCPtr(ec), ec);
  }

  public int move_storage(String save_path, int flags, storage_error ec) {
    return (getClass() == swig_storage.class) ? libtorrent_jni.swig_storage_move_storage(swigCPtr, this, save_path, flags, storage_error.getCPtr(ec), ec) : libtorrent_jni.swig_storage_move_storageSwigExplicitswig_storage(swigCPtr, this, save_path, flags, storage_error.getCPtr(ec), ec);
  }

  public boolean verify_resume_data(add_torrent_params rd, string_vector links, storage_error ec) {
    return (getClass() == swig_storage.class) ? libtorrent_jni.swig_storage_verify_resume_data(swigCPtr, this, add_torrent_params.getCPtr(rd), rd, string_vector.getCPtr(links), links, storage_error.getCPtr(ec), ec) : libtorrent_jni.swig_storage_verify_resume_dataSwigExplicitswig_storage(swigCPtr, this, add_torrent_params.getCPtr(rd), rd, string_vector.getCPtr(links), links, storage_error.getCPtr(ec), ec);
  }

  public void write_resume_data(entry rd, storage_error ec) {
    if (getClass() == swig_storage.class) libtorrent_jni.swig_storage_write_resume_data(swigCPtr, this, entry.getCPtr(rd), rd, storage_error.getCPtr(ec), ec); else libtorrent_jni.swig_storage_write_resume_dataSwigExplicitswig_storage(swigCPtr, this, entry.getCPtr(rd), rd, storage_error.getCPtr(ec), ec);
  }

  public void release_files(storage_error ec) {
    if (getClass() == swig_storage.class) libtorrent_jni.swig_storage_release_files(swigCPtr, this, storage_error.getCPtr(ec), ec); else libtorrent_jni.swig_storage_release_filesSwigExplicitswig_storage(swigCPtr, this, storage_error.getCPtr(ec), ec);
  }

  public void rename_file(int index, String new_filename, storage_error ec) {
    if (getClass() == swig_storage.class) libtorrent_jni.swig_storage_rename_file(swigCPtr, this, index, new_filename, storage_error.getCPtr(ec), ec); else libtorrent_jni.swig_storage_rename_fileSwigExplicitswig_storage(swigCPtr, this, index, new_filename, storage_error.getCPtr(ec), ec);
  }

  public void delete_files(int options, storage_error ec) {
    if (getClass() == swig_storage.class) libtorrent_jni.swig_storage_delete_files(swigCPtr, this, options, storage_error.getCPtr(ec), ec); else libtorrent_jni.swig_storage_delete_filesSwigExplicitswig_storage(swigCPtr, this, options, storage_error.getCPtr(ec), ec);
  }

  public boolean tick() {
    return (getClass() == swig_storage.class) ? libtorrent_jni.swig_storage_tick(swigCPtr, this) : libtorrent_jni.swig_storage_tickSwigExplicitswig_storage(swigCPtr, this);
  }

  public swig_storage() {
    this(libtorrent_jni.new_swig_storage(), true);
    libtorrent_jni.swig_storage_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

}
