/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class torrent_plugin {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected torrent_plugin(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(torrent_plugin obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_torrent_plugin(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void on_piece_pass(int arg0) {
    libtorrent_jni.torrent_plugin_on_piece_pass(swigCPtr, this, arg0);
  }

  public void on_piece_failed(int arg0) {
    libtorrent_jni.torrent_plugin_on_piece_failed(swigCPtr, this, arg0);
  }

  public void tick() {
    libtorrent_jni.torrent_plugin_tick(swigCPtr, this);
  }

  public boolean on_pause() {
    return libtorrent_jni.torrent_plugin_on_pause(swigCPtr, this);
  }

  public boolean on_resume() {
    return libtorrent_jni.torrent_plugin_on_resume(swigCPtr, this);
  }

  public void on_files_checked() {
    libtorrent_jni.torrent_plugin_on_files_checked(swigCPtr, this);
  }

  public void on_state(int arg0) {
    libtorrent_jni.torrent_plugin_on_state(swigCPtr, this, arg0);
  }

  public void on_unload() {
    libtorrent_jni.torrent_plugin_on_unload(swigCPtr, this);
  }

  public void on_load() {
    libtorrent_jni.torrent_plugin_on_load(swigCPtr, this);
  }

  public void on_add_peer(tcp_endpoint arg0, int arg1, int arg2) {
    libtorrent_jni.torrent_plugin_on_add_peer(swigCPtr, this, tcp_endpoint.getCPtr(arg0), arg0, arg1, arg2);
  }

  public torrent_plugin() {
    this(libtorrent_jni.new_torrent_plugin(), true);
  }

  public final static class flags_t {
    public final static torrent_plugin.flags_t first_time = new torrent_plugin.flags_t("first_time", libtorrent_jni.torrent_plugin_first_time_get());
    public final static torrent_plugin.flags_t filtered = new torrent_plugin.flags_t("filtered", libtorrent_jni.torrent_plugin_filtered_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static flags_t swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + flags_t.class + " with value " + swigValue);
    }

    private flags_t(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private flags_t(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private flags_t(String swigName, flags_t swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static flags_t[] swigValues = { first_time, filtered };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
