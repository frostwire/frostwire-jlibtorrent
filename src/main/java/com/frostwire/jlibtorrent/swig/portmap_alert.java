/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class portmap_alert extends alert {
  private transient long swigCPtr;

  protected portmap_alert(long cPtr, boolean cMemoryOwn) {
    super(libtorrent_jni.portmap_alert_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(portmap_alert obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_portmap_alert(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public int type() {
    return libtorrent_jni.portmap_alert_type(swigCPtr, this);
  }

  public int category() {
    return libtorrent_jni.portmap_alert_category(swigCPtr, this);
  }

  public String what() {
    return libtorrent_jni.portmap_alert_what(swigCPtr, this);
  }

  public String message() {
    return libtorrent_jni.portmap_alert_message(swigCPtr, this);
  }

  public void setMapping(int value) {
    libtorrent_jni.portmap_alert_mapping_set(swigCPtr, this, value);
  }

  public int getMapping() {
    return libtorrent_jni.portmap_alert_mapping_get(swigCPtr, this);
  }

  public void setExternal_port(int value) {
    libtorrent_jni.portmap_alert_external_port_set(swigCPtr, this, value);
  }

  public int getExternal_port() {
    return libtorrent_jni.portmap_alert_external_port_get(swigCPtr, this);
  }

  public void setMap_type(int value) {
    libtorrent_jni.portmap_alert_map_type_set(swigCPtr, this, value);
  }

  public int getMap_type() {
    return libtorrent_jni.portmap_alert_map_type_get(swigCPtr, this);
  }

  public void setProtocol(int value) {
    libtorrent_jni.portmap_alert_protocol_set(swigCPtr, this, value);
  }

  public int getProtocol() {
    return libtorrent_jni.portmap_alert_protocol_get(swigCPtr, this);
  }

  public final static int priority = libtorrent_jni.portmap_alert_priority_get();
  public final static int alert_type = libtorrent_jni.portmap_alert_alert_type_get();
  public final static int static_category = libtorrent_jni.portmap_alert_static_category_get();
  public final static class protocol_t {
    public final static portmap_alert.protocol_t tcp = new portmap_alert.protocol_t("tcp");
    public final static portmap_alert.protocol_t udp = new portmap_alert.protocol_t("udp");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static protocol_t swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + protocol_t.class + " with value " + swigValue);
    }

    private protocol_t(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private protocol_t(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private protocol_t(String swigName, protocol_t swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static protocol_t[] swigValues = { tcp, udp };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
