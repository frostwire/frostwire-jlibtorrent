/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public final class bdecode_errors {
  public final static bdecode_errors bdecode_no_error = new bdecode_errors("bdecode_no_error", libtorrent_jni.bdecode_no_error_get());
  public final static bdecode_errors expected_digit = new bdecode_errors("expected_digit");
  public final static bdecode_errors expected_colon = new bdecode_errors("expected_colon");
  public final static bdecode_errors unexpected_eof = new bdecode_errors("unexpected_eof");
  public final static bdecode_errors expected_value = new bdecode_errors("expected_value");
  public final static bdecode_errors depth_exceeded = new bdecode_errors("depth_exceeded");
  public final static bdecode_errors limit_exceeded = new bdecode_errors("limit_exceeded");
  public final static bdecode_errors overflow = new bdecode_errors("overflow");
  public final static bdecode_errors error_code_max = new bdecode_errors("error_code_max");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static bdecode_errors swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + bdecode_errors.class + " with value " + swigValue);
  }

  private bdecode_errors(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private bdecode_errors(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private bdecode_errors(String swigName, bdecode_errors swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static bdecode_errors[] swigValues = { bdecode_no_error, expected_digit, expected_colon, unexpected_eof, expected_value, depth_exceeded, limit_exceeded, overflow, error_code_max };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

